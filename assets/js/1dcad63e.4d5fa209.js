"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[2994],{28453:(e,n,a)=>{a.d(n,{R:()=>o,x:()=>i});var t=a(96540);const s={},r=t.createContext(s);function o(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(r.Provider,{value:n},e.children)}},53800:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"system-architecture/sequence-diagrams","title":"Sequence Diagrams","description":"Use Case 1: Creating a New Workspace","source":"@site/docs/system-architecture/sequence-diagrams.md","sourceDirName":"system-architecture","slug":"/system-architecture/sequence-diagrams","permalink":"/project-001-sketch2screen/docs/system-architecture/sequence-diagrams","draft":false,"unlisted":false,"editUrl":"https://github.com/Capstone-Projects-2025-Fall/project-001-sketch2screen/edit/main/documentation/docs/system-architecture/sequence-diagrams.md","tags":[],"version":"current","lastUpdatedBy":"Seunghun Lee","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"docsSidebar","previous":{"title":"System Architecture","permalink":"/project-001-sketch2screen/docs/category/system-architecture"},"next":{"title":"Development Environment","permalink":"/project-001-sketch2screen/docs/system-architecture/development-environment"}}');var s=a(74848),r=a(28453);const o={sidebar_position:2},i="Sequence Diagrams",c={},d=[{value:"Use Case 1: Creating a New Workspace",id:"use-case-1-creating-a-new-workspace",level:2},{value:"Use Case 2: Joining an Existing Workspace",id:"use-case-2-joining-an-existing-workspace",level:2},{value:"Use Case 3: Creating Sketches with Real-time Collaboration",id:"use-case-3-creating-sketches-with-real-time-collaboration",level:2},{value:"Use Case 4: Generating AI Components from Sketches",id:"use-case-4-generating-ai-components-from-sketches",level:2},{value:"Use Case 5: Selecting and Customizing Generated Components",id:"use-case-5-selecting-and-customizing-generated-components",level:2},{value:"Use Case 6: Arranging Components in Design Mode",id:"use-case-6-arranging-components-in-design-mode",level:2},{value:"Use Case 7: Exporting Final Code",id:"use-case-7-exporting-final-code",level:2},{value:"Use Case 8: Saving and Resuming Workspace",id:"use-case-8-saving-and-resuming-workspace",level:2}];function l(e){const n={em:"em",h1:"h1",h2:"h2",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"sequence-diagrams",children:"Sequence Diagrams"})}),"\n",(0,s.jsx)(n.h2,{id:"use-case-1-creating-a-new-workspace",children:"Use Case 1: Creating a New Workspace"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"As a user, I want to create a new workspace to start sketching my website design"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"User navigates to the Sketch2Screen application homepage"}),"\n",(0,s.jsx)(n.li,{children:'User clicks "Create New Workspace" button'}),"\n",(0,s.jsx)(n.li,{children:"System generates a unique workspace ID and shareable link"}),"\n",(0,s.jsx)(n.li,{children:"System redirects user to the sketch canvas interface with drawing tools"}),"\n",(0,s.jsx)(n.li,{children:"System displays the shareable workspace link/code for collaboration"}),"\n"]}),"\n",(0,s.jsx)(n.mermaid,{value:'---\ntitle: Sequence Diagram 1 \u2013 Creating a New Workspace\n---\n\nsequenceDiagram\n    actor User\n    participant Frontend\n    participant Backend\n    participant Database\n\n    User->>Frontend: Navigate to homepage\n    Frontend--\x3e>User: Display landing page\n    User->>Frontend: Click "Create New Workspace"\n    Frontend->>Backend: POST /workspace/create\n    activate Backend\n    Backend->>Database: Generate unique workspace ID\n    Database--\x3e>Backend: Return workspace ID & shareable link\n    Backend--\x3e>Frontend: Send workspace data\n    deactivate Backend\n    Frontend->>Frontend: Redirect to sketch canvas\n    Frontend--\x3e>User: Display sketch interface with shareable link\n\n    alt Workspace creation fails\n        Backend--\x3e>Frontend: Error: Unable to create workspace\n        Frontend--\x3e>User: Display error message\n    end'}),"\n",(0,s.jsx)(n.h2,{id:"use-case-2-joining-an-existing-workspace",children:"Use Case 2: Joining an Existing Workspace"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"As a collaborator, I want to join a workspace using a shared link so I can work with my team"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"User receives workspace link or code from workspace creator"}),"\n",(0,s.jsx)(n.li,{children:"User clicks on shared link or enters workspace code on homepage"}),"\n",(0,s.jsx)(n.li,{children:"System validates the workspace link/code"}),"\n",(0,s.jsx)(n.li,{children:"System loads the existing workspace with current canvas state"}),"\n",(0,s.jsx)(n.li,{children:"User sees the current sketch canvas and any existing work from other collaborators"}),"\n",(0,s.jsx)(n.li,{children:"System notifies other active users of the new collaborator joining"}),"\n"]}),"\n",(0,s.jsx)(n.mermaid,{value:"---\ntitle: Sequence Diagram 2 \u2013 Joining an Existing Workspace\n---\n\nsequenceDiagram\n    actor Collaborator\n    actor Other_Users as Other Users\n    participant Frontend\n    participant Backend\n    participant Database\n    participant WebSocket\n\n    Collaborator->>Frontend: Click shared link or enter code\n    Frontend->>Backend: GET /workspace/{id}/validate\n    Backend->>Database: Check workspace exists\n\n    alt Workspace exists\n        Database--\x3e>Backend: Return workspace data\n        Backend--\x3e>Frontend: Send current workspace state\n        Frontend->>WebSocket: Connect to workspace channel\n        WebSocket->>Other_Users: Notify new collaborator joined\n        Frontend--\x3e>Collaborator: Display canvas with existing work\n    else Invalid workspace\n        Database--\x3e>Backend: Workspace not found\n        Backend--\x3e>Frontend: Error: Invalid workspace\n        Frontend--\x3e>Collaborator: Display error and redirect to homepage\n    else Workspace deleted\n        Database--\x3e>Backend: Workspace deleted\n        Backend--\x3e>Frontend: Error: Workspace no longer available\n        Frontend--\x3e>Collaborator: Display error and redirect to homepage\n    end"}),"\n",(0,s.jsx)(n.h2,{id:"use-case-3-creating-sketches-with-real-time-collaboration",children:"Use Case 3: Creating Sketches with Real-time Collaboration"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"As a user, I want to draw UI components on the canvas and see my teammates' drawings in real-time"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"User selects drawing tool from toolbar (pen, shapes, text, etc.)"}),"\n",(0,s.jsx)(n.li,{children:"User draws UI component sketches on canvas"}),"\n",(0,s.jsx)(n.li,{children:"System captures drawing strokes and broadcasts updates to all active collaborators"}),"\n",(0,s.jsx)(n.li,{children:"Other users see drawing updates appear on their canvas immediately"}),"\n",(0,s.jsx)(n.li,{children:"User completes sketch"}),"\n",(0,s.jsx)(n.li,{children:"System automatically saves current canvas state"}),"\n"]}),"\n",(0,s.jsx)(n.mermaid,{value:'---\ntitle: Sequence Diagram 3 \u2013 Creating Sketches with Real-time Collaboration\n---\n\nsequenceDiagram\n    actor User\n    actor Collaborators\n    participant Frontend\n    participant WebSocket\n    participant Backend\n    participant Database\n\n    User->>Frontend: Select drawing tool\n    Frontend--\x3e>User: Activate drawing mode\n    User->>Frontend: Draw on canvas\n    Frontend->>Frontend: Capture drawing strokes\n\n    loop For each stroke\n        Frontend->>WebSocket: Broadcast drawing data\n        WebSocket->>Backend: Relay drawing updates\n        Backend->>WebSocket: Forward to other users\n        WebSocket->>Frontend: Send real-time drawing updates\n        Frontend->>Frontend: Update canvas with new drawing\n        Frontend->>Collaborators: Show updated sketch\n    end\n\n    User->>Frontend: Complete sketch\n    Frontend->>Backend: POST /workspace/save\n    Backend->>Database: Save canvas state\n    Database--\x3e>Backend: Confirm save\n    Backend--\x3e>Frontend: Save confirmed\n\n    Note over Frontend,WebSocket: Alt: Connection lost\n    Frontend->>Frontend: Queue drawing data locally\n    Frontend--\x3e>User: Show "Connection lost" indicator\n    WebSocket--\x3e>Frontend: Connection restored\n    Frontend->>WebSocket: Sync queued changes'}),"\n",(0,s.jsx)(n.h2,{id:"use-case-4-generating-ai-components-from-sketches",children:"Use Case 4: Generating AI Components from Sketches"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"As a user, I want to convert my sketches into professional UI components using AI"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"User completes sketching UI components on canvas"}),"\n",(0,s.jsx)(n.li,{children:'User clicks "Generate" button'}),"\n",(0,s.jsx)(n.li,{children:"System displays loading indicator"}),"\n",(0,s.jsx)(n.li,{children:"System processes canvas sketches and sends to AI model"}),"\n",(0,s.jsx)(n.li,{children:"AI model analyzes sketches and generates multiple UI component variations"}),"\n",(0,s.jsx)(n.li,{children:"System displays generated component options in selection interface"}),"\n",(0,s.jsx)(n.li,{children:"User reviews the multiple variations for each sketch element"}),"\n"]}),"\n",(0,s.jsx)(n.mermaid,{value:'---\ntitle: Sequence Diagram 4 \u2013 Generating AI Components from Sketches\n---\n\nsequenceDiagram\n    actor User\n    participant Frontend\n    participant Backend\n    participant AI_Model as AI Model\n\n    User->>Frontend: Click "Generate" button\n    Frontend--\x3e>User: Show loading indicator\n    Frontend->>Backend: POST /generate with canvas data\n    Backend->>AI_Model: Process sketches for UI components\n    Note over AI_Model: Analyze sketches and<br/>generate multiple variations\n\n    alt Generation successful\n        AI_Model--\x3e>Backend: Return generated component options\n        Backend--\x3e>Frontend: Send component variations\n        Frontend--\x3e>User: Display selection interface with options\n    else AI generation fails\n        AI_Model--\x3e>Backend: Generation error\n        Backend--\x3e>Frontend: Error: Generation failed\n        Frontend--\x3e>User: Display "Generation failed. Please try again."\n    else No components detected\n        AI_Model--\x3e>Backend: No recognizable UI components\n        Backend--\x3e>Frontend: No components found\n        Frontend--\x3e>User: Display "No UI components detected"\n    end'}),"\n",(0,s.jsx)(n.h2,{id:"use-case-5-selecting-and-customizing-generated-components",children:"Use Case 5: Selecting and Customizing Generated Components"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"As a user, I want to choose my favorite design variations from the AI-generated options"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"System displays multiple variations for each identified sketch element"}),"\n",(0,s.jsx)(n.li,{children:"User reviews all component options"}),"\n",(0,s.jsx)(n.li,{children:"User clicks to select preferred version of each component"}),"\n",(0,s.jsx)(n.li,{children:"System highlights selected components"}),"\n",(0,s.jsx)(n.li,{children:'User clicks "Apply Selected Components" to confirm selections'}),"\n",(0,s.jsx)(n.li,{children:"System prepares to transfer selected components to design page"}),"\n"]}),"\n",(0,s.jsx)(n.mermaid,{value:'---\ntitle: Sequence Diagram 5 \u2013 Selecting and Customizing Generated Components\n---\n\nsequenceDiagram\n    actor User\n    participant Frontend\n    participant Backend\n    participant AI_Model as AI Model\n\n    Frontend--\x3e>User: Display generated component variations\n    User->>Frontend: Review component options\n    User->>Frontend: Select preferred variations\n    Frontend->>Frontend: Highlight selected components\n\n    alt User applies selections\n        User->>Frontend: Click "Apply Selected Components"\n        Frontend->>Backend: POST /components/select\n        Backend--\x3e>Frontend: Confirm selections\n        Frontend--\x3e>User: Prepare transition to design mode\n    else User wants to regenerate\n        User->>Frontend: Click "Regenerate"\n        Frontend->>Backend: POST /generate with canvas data\n        Backend->>AI_Model: Process sketches again\n        AI_Model--\x3e>Backend: Return new variations\n        Backend--\x3e>Frontend: Send new options\n        Frontend--\x3e>User: Display updated component options\n    else No components selected\n        User->>Frontend: Click "Apply" with no selections\n        Frontend--\x3e>User: Display "Please select at least one component"\n    end'}),"\n",(0,s.jsx)(n.h2,{id:"use-case-6-arranging-components-in-design-mode",children:"Use Case 6: Arranging Components in Design Mode"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"As a user, I want to arrange the selected components into a complete page layout"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"System switches to design mode interface"}),"\n",(0,s.jsx)(n.li,{children:"System displays selected components as draggable elements on design canvas"}),"\n",(0,s.jsx)(n.li,{children:"User drags and drops components to arrange layout"}),"\n",(0,s.jsx)(n.li,{children:"System provides alignment guides and snap-to-grid functionality"}),"\n",(0,s.jsx)(n.li,{children:"User resizes components as needed using drag handles"}),"\n",(0,s.jsx)(n.li,{children:"User adjusts spacing and positioning until satisfied with layout"}),"\n",(0,s.jsx)(n.li,{children:"System saves current design state"}),"\n"]}),"\n",(0,s.jsx)(n.mermaid,{value:'---\ntitle: Sequence Diagram 6 \u2013 Arranging Components in Design Mode\n---\n\nsequenceDiagram\n    actor User\n    participant Frontend\n    participant Backend\n    participant Database\n\n    Frontend->>Frontend: Switch to design mode interface\n    Frontend--\x3e>User: Display components as draggable elements\n\n    loop Design adjustments\n        User->>Frontend: Drag and drop components\n        Frontend->>Frontend: Provide alignment guides\n        User->>Frontend: Resize components\n        Frontend->>Frontend: Update component dimensions\n        User->>Frontend: Adjust spacing and positioning\n    end\n\n    Frontend->>Backend: POST /design/save\n    Backend->>Database: Save design state\n    Database--\x3e>Backend: Confirm save\n    Backend--\x3e>Frontend: Design saved\n\n    Note over User,Frontend: Alt: User wants to modify component\n    User->>Frontend: Right-click component\n    Frontend--\x3e>User: Show options menu\n    User->>Frontend: Select modification option\n    Frontend->>Frontend: Apply component changes\n\n    Note over User,Frontend: Alt: User wants to add more components\n    User->>Frontend: Click "Add More Components"\n    Frontend->>Frontend: Return to sketch canvas mode'}),"\n",(0,s.jsx)(n.h2,{id:"use-case-7-exporting-final-code",children:"Use Case 7: Exporting Final Code"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"As a user, I want to export my design as usable code for different frameworks"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"User completes design arrangement"}),"\n",(0,s.jsx)(n.li,{children:'User clicks "Export" button from design interface'}),"\n",(0,s.jsx)(n.li,{children:"System displays export options dialog with framework choices"}),"\n",(0,s.jsx)(n.li,{children:"User selects desired framework and export format"}),"\n",(0,s.jsx)(n.li,{children:"System generates code based on current design layout"}),"\n",(0,s.jsx)(n.li,{children:"System packages code files and presents download options"}),"\n",(0,s.jsx)(n.li,{children:"User downloads generated code files"}),"\n",(0,s.jsx)(n.li,{children:"System confirms successful export"}),"\n"]}),"\n",(0,s.jsx)(n.mermaid,{value:'---\ntitle: Sequence Diagram 7 \u2013 Exporting Final Code\n---\n\nsequenceDiagram\n    actor User\n    participant Frontend\n    participant Backend\n    participant Code_Generator as Code Generator\n\n    User->>Frontend: Click "Export" button\n    Frontend--\x3e>User: Display export options dialog\n    Frontend--\x3e>User: Show framework choices\n    User->>Frontend: Select framework and format\n    Frontend->>Backend: POST /export with design and preferences\n    Backend->>Code_Generator: Generate code based on design\n\n    alt Code generation successful\n        Code_Generator--\x3e>Backend: Return generated code files\n        Backend->>Backend: Package code files\n        Backend--\x3e>Frontend: Send download package\n        Frontend--\x3e>User: Present download options\n        User->>Frontend: Download generated code files\n        Frontend--\x3e>User: Confirm successful export\n    else Code generation fails\n        Code_Generator--\x3e>Backend: Generation error\n        Backend--\x3e>Frontend: Export failed\n        Frontend--\x3e>User: Display "Export failed. Please try again."\n    else No components to export\n        Frontend->>Frontend: Check for components\n        Frontend--\x3e>User: Display "No components to export"\n    end'}),"\n",(0,s.jsx)(n.h2,{id:"use-case-8-saving-and-resuming-workspace",children:"Use Case 8: Saving and Resuming Workspace"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"As a user, I want to save my work and return to it later"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"System automatically saves workspace state periodically during work"}),"\n",(0,s.jsx)(n.li,{children:"User bookmarks or saves the workspace URL for later access"}),"\n",(0,s.jsx)(n.li,{children:"User returns to the saved workspace URL at a later time"}),"\n",(0,s.jsx)(n.li,{children:"System loads saved workspace state including sketches, selected components, and design layout"}),"\n",(0,s.jsx)(n.li,{children:"User can continue working from where they left off"}),"\n"]}),"\n",(0,s.jsx)(n.mermaid,{value:"---\ntitle: Sequence Diagram 8 \u2013 Saving and Resuming Workspace\n---\n\nsequenceDiagram\n    actor User\n    participant Frontend\n    participant Backend\n    participant Database\n\n    Note over Frontend,Backend: Automatic saving during work\n    loop Periodic saves\n        Frontend->>Backend: POST /workspace/save (auto-save)\n        Backend->>Database: Store workspace data\n        Database--\x3e>Backend: Confirm data saved\n    end\n\n    User->>Frontend: Bookmark workspace URL\n    Note over User: User returns later\n    User->>Frontend: Access saved workspace URL\n    Frontend->>Backend: GET /workspace/{id}\n    Backend->>Database: Retrieve workspace state\n\n    alt Workspace data intact\n        Database--\x3e>Backend: Return saved data\n        Backend--\x3e>Frontend: Send complete workspace state\n        Frontend--\x3e>User: Restore canvas, components, and layout\n    else Workspace data corrupted\n        Database--\x3e>Backend: Data corruption error\n        Backend--\x3e>Frontend: Unable to load workspace\n        Frontend--\x3e>User: Display error with option to start fresh\n    else Partial data recovery\n        Database--\x3e>Backend: Partial workspace data\n        Backend--\x3e>Frontend: Send available data with warning\n        Frontend--\x3e>User: Load recovered data and notify of loss\n    end"})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);