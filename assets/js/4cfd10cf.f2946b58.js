"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[5486],{28453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>t});var r=s(96540);const d={},i=r.createContext(d);function c(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:c(e.components),r.createElement(i.Provider,{value:n},e.children)}},67990:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>o,frontMatter:()=>c,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"api-specification/frontend-api/types-and-interfaces","title":"Types & Interfaces","description":"TypeScript type definitions used throughout the Sketch2Screen frontend.","source":"@site/docs/api-specification/frontend-api/types-and-interfaces.md","sourceDirName":"api-specification/frontend-api","slug":"/api-specification/frontend-api/types-and-interfaces","permalink":"/project-001-sketch2screen/docs/api-specification/frontend-api/types-and-interfaces","draft":false,"unlisted":false,"editUrl":"https://github.com/Capstone-Projects-2025-Fall/project-001-sketch2screen/edit/main/documentation/docs/api-specification/frontend-api/types-and-interfaces.md","tags":[],"version":"current","lastUpdatedBy":"Seunghun Lee","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Frontend Components","permalink":"/project-001-sketch2screen/docs/api-specification/frontend-api/components"},"next":{"title":"System Architecture","permalink":"/project-001-sketch2screen/docs/category/system-architecture"}}');var d=s(74848),i=s(28453);const c={},t="Types & Interfaces",l={},a=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"Enums",id:"enums",level:2},{value:"Page Enum",id:"page-enum",level:3},{value:"Core Types",id:"core-types",level:2},{value:"SceneData Type",id:"scenedata-type",level:3},{value:"SketchPage Type",id:"sketchpage-type",level:3},{value:"MockupPage Type",id:"mockuppage-type",level:3},{value:"SidebarItem Type",id:"sidebaritem-type",level:3},{value:"Component Props",id:"component-props",level:2},{value:"DrawingProps Interface",id:"drawingprops-interface",level:3},{value:"DrawingHandle Type",id:"drawinghandle-type",level:3},{value:"NavbarProps Type",id:"navbarprops-type",level:3},{value:"MockupProps Type",id:"mockupprops-type",level:3},{value:"PageSidebarProps Type",id:"pagesidebarprops-type",level:3},{value:"CollaborationDialogProps Interface",id:"collaborationdialogprops-interface",level:3},{value:"Utility Types",id:"utility-types",level:2},{value:"ExcalidrawAPI Type",id:"excalidrawapi-type",level:3},{value:"Type Guards",id:"type-guards",level:2},{value:"Checking Page Type",id:"checking-page-type",level:3},{value:"Type Conversions",id:"type-conversions",level:2},{value:"SketchPage to MockupPage",id:"sketchpage-to-mockuppage",level:3},{value:"Backend Response to MockupPage",id:"backend-response-to-mockuppage",level:3},{value:"Related Documentation",id:"related-documentation",level:2}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.header,{children:(0,d.jsx)(n.h1,{id:"types--interfaces",children:"Types & Interfaces"})}),"\n",(0,d.jsx)(n.p,{children:"TypeScript type definitions used throughout the Sketch2Screen frontend."}),"\n",(0,d.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.a,{href:"#enums",children:"Enums"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.a,{href:"#page-enum",children:"Page"})}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.a,{href:"#core-types",children:"Core Types"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.a,{href:"#scenedata-type",children:"SceneData"})}),"\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.a,{href:"#sketchpage-type",children:"SketchPage"})}),"\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.a,{href:"#mockuppage-type",children:"MockupPage"})}),"\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.a,{href:"#sidebaritem-type",children:"SidebarItem"})}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.a,{href:"#component-props",children:"Component Props"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.a,{href:"#drawingprops-interface",children:"DrawingProps"})}),"\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.a,{href:"#drawinghandle-type",children:"DrawingHandle"})}),"\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.a,{href:"#navbarprops-type",children:"NavbarProps"})}),"\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.a,{href:"#mockupprops-type",children:"MockupProps"})}),"\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.a,{href:"#pagesidebarprops-type",children:"PageSidebarProps"})}),"\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.a,{href:"#collaborationdialogprops-interface",children:"CollaborationDialogProps"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h2,{id:"enums",children:"Enums"}),"\n",(0,d.jsx)(n.h3,{id:"page-enum",children:"Page Enum"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"File:"})," ",(0,d.jsx)(n.code,{children:"frontend/src/App/App.tsx"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Purpose:"})," Represents the available views/pages in the application."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-typescript",children:"export enum Page {\n  Drawing,\n  Mockup\n}\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Values:"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"Page.Drawing"})," (0) - Sketch canvas view"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"Page.Mockup"})," (1) - Generated mockup display view"]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Usage:"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-typescript",children:"const [currentPage, setCurrentPage] = useState<Page>(Page.Drawing);\n\nif (currentPage === Page.Drawing) {\n  return <Drawing />;\n} else {\n  return <Mockup />;\n}\n"})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h2,{id:"core-types",children:"Core Types"}),"\n",(0,d.jsx)(n.h3,{id:"scenedata-type",children:"SceneData Type"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"File:"})," ",(0,d.jsx)(n.code,{children:"frontend/src/App/Drawing.tsx"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Purpose:"})," Represents a complete Excalidraw scene with all its components."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-typescript",children:"export type SceneData = {\n  /** Array of drawing elements */\n  elements: readonly any[];\n  /** Application state including view settings */\n  appState: any;\n  /** Map of binary files (like images) used in the scene */\n  files: Record<string, any>;\n};\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Fields:"})}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Field"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"elements"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"readonly any[]"})}),(0,d.jsx)(n.td,{children:"Array of Excalidraw drawing elements (rectangles, arrows, text, etc.)"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"appState"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"any"})}),(0,d.jsx)(n.td,{children:"Excalidraw application state (zoom, colors, background, etc.)"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"files"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"Record<string, any>"})}),(0,d.jsx)(n.td,{children:"Binary files embedded in the scene (images, etc.)"})]})]})]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Example:"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-typescript",children:'const scene: SceneData = {\n  elements: [\n    {\n      type: "rectangle",\n      x: 100,\n      y: 100,\n      width: 200,\n      height: 150,\n      strokeColor: "#000000",\n      // ... other properties\n    }\n  ],\n  appState: {\n    viewBackgroundColor: "#ffffff",\n    zoom: { value: 1 },\n    currentItemStrokeColor: "#000000",\n    // ... other state\n  },\n  files: {}\n};\n'})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Empty Scene:"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-typescript",children:'const emptyScene: SceneData = {\n  elements: [],\n  appState: {\n    viewBackgroundColor: "#ffffff",\n    currentItemStrokeColor: "#000000",\n    currentItemFillColor: "transparent",\n    exportBackground: true,\n    exportWithDarkMode: false,\n  },\n  files: {}\n};\n'})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"sketchpage-type",children:"SketchPage Type"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"File:"})," ",(0,d.jsx)(n.code,{children:"frontend/src/App/App.tsx"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Purpose:"})," Represents a single sketch page with its metadata and drawing content."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-typescript",children:"type SketchPage = {\n  /** Unique identifier for the page */\n  id: string;\n  /** Display name of the page */\n  name: string;\n  /** Excalidraw scene data containing elements, state and files */\n  scene: SceneData;\n};\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Fields:"})}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Field"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"id"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:"Unique identifier (UUID or deterministic ID for collaboration)"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"name"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:"User-editable display name shown in sidebar"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"scene"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"SceneData"})}),(0,d.jsx)(n.td,{children:"Excalidraw scene containing all drawing elements"})]})]})]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Example:"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-typescript",children:'const page: SketchPage = {\n  id: "12345-p1",\n  name: "Homepage Design",\n  scene: {\n    elements: [...],\n    appState: {...},\n    files: {}\n  }\n};\n'})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Creating New Pages:"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-typescript",children:"const newPage: SketchPage = {\n  id: crypto.randomUUID(),\n  name: `Page ${pages.length + 1}`,\n  scene: makeEmptyScene()\n};\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Deterministic IDs for Collaboration:"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-typescript",children:'const firstPage: SketchPage = {\n  id: `${collabID}-p1`, // e.g., "12345-p1"\n  name: "Page 1",\n  scene: makeEmptyScene()\n};\n'})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"mockuppage-type",children:"MockupPage Type"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"File:"})," ",(0,d.jsx)(n.code,{children:"frontend/src/App/Mockup.tsx"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Purpose:"})," Represents a generated HTML mockup page."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-typescript",children:"export type MockupPage = {\n  /** Unique identifier */\n  id: string;\n  /** Name of sketch page */\n  name: string;\n  /** HTML content of the mockup */\n  html: string;\n};\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Fields:"})}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Field"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"id"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:"Unique identifier matching the original sketch page"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"name"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:"Display name (usually matches the sketch page name)"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"html"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:"Generated HTML/CSS code from Claude AI"})]})]})]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Example:"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-typescript",children:'const mockup: MockupPage = {\n  id: "page-1",\n  name: "Homepage",\n  html: `\n    <div style="padding: 20px;">\n      <h1>Welcome</h1>\n      <p>Homepage content...</p>\n    </div>\n  `\n};\n'})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"From Backend Response:"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-typescript",children:"const response = await fetch('/api/generate-multi/', {...});\nconst { results } = await response.json();\n\nconst mockups: MockupPage[] = results.map((r: any) => ({\n  id: r.id,\n  name: pages.find(p => p.id === r.id)?.name || 'Untitled',\n  html: r.html\n}));\n"})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"sidebaritem-type",children:"SidebarItem Type"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"File:"})," ",(0,d.jsx)(n.code,{children:"frontend/src/App/reusable_sidebar.tsx"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Purpose:"})," Generic type for items displayable in the sidebar component."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-typescript",children:"export type SidebarItem = {\n  /** Unique identifier */\n  id: string;\n  /** Display name */\n  name: string;\n};\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Fields:"})}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Field"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"id"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:"Unique identifier for the item"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"name"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:"Display text shown in sidebar"})]})]})]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Usage:"})}),"\n",(0,d.jsxs)(n.p,{children:["Both ",(0,d.jsx)(n.code,{children:"SketchPage"})," and ",(0,d.jsx)(n.code,{children:"MockupPage"})," extend this type:"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-typescript",children:"// SketchPage extends SidebarItem\ntype SketchPage = SidebarItem & {\n  scene: SceneData;\n};\n\n// MockupPage extends SidebarItem\ntype MockupPage = SidebarItem & {\n  html: string;\n};\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Generic Component:"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-typescript",children:"function PageSidebar<T extends SidebarItem>(props: Props<T>) {\n  // Works with any type that has id and name\n}\n\n// Used with SketchPage\n<PageSidebar<SketchPage> items={sketchPages} {...} />\n\n// Used with MockupPage\n<PageSidebar<MockupPage> items={mockupPages} {...} />\n"})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h2,{id:"component-props",children:"Component Props"}),"\n",(0,d.jsx)(n.h3,{id:"drawingprops-interface",children:"DrawingProps Interface"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"File:"})," ",(0,d.jsx)(n.code,{children:"frontend/src/App/Drawing.tsx"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Purpose:"})," Props for the Drawing component."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-typescript",children:"export interface DrawingProps {\n  /** CSS class name for styling */\n  className?: string;\n  /** Width of the drawing canvas */\n  width?: number;\n  /** Height of the drawing canvas */\n  height?: number;\n  /** Whether the drawing canvas is visible */\n  visible?: boolean;\n  /** Initial scene data to load */\n  initialScene?: SceneData;\n  /** Callback fired when the scene changes */\n  onSceneChange?: (scene: SceneData) => void;\n  /** Callback to receive Excalidraw API */\n  onExcalidrawAPI?: (api: any) => void;\n}\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"All Properties:"})}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Property"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Required"}),(0,d.jsx)(n.th,{children:"Default"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"className"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:"No"}),(0,d.jsx)(n.td,{children:"-"}),(0,d.jsx)(n.td,{children:"CSS class for custom styling"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"width"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"No"}),(0,d.jsx)(n.td,{children:"-"}),(0,d.jsx)(n.td,{children:"Canvas width in pixels"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"height"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:"No"}),(0,d.jsx)(n.td,{children:"-"}),(0,d.jsx)(n.td,{children:"Canvas height in pixels"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"visible"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"boolean"})}),(0,d.jsx)(n.td,{children:"No"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"true"})}),(0,d.jsx)(n.td,{children:"Controls display via CSS"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"initialScene"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"SceneData"})}),(0,d.jsx)(n.td,{children:"No"}),(0,d.jsx)(n.td,{children:"Empty"}),(0,d.jsx)(n.td,{children:"Initial drawing to load"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"onSceneChange"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"(scene: SceneData) => void"})}),(0,d.jsx)(n.td,{children:"No"}),(0,d.jsx)(n.td,{children:"-"}),(0,d.jsx)(n.td,{children:"Called when scene changes"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"onExcalidrawAPI"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"(api: any) => void"})}),(0,d.jsx)(n.td,{children:"No"}),(0,d.jsx)(n.td,{children:"-"}),(0,d.jsx)(n.td,{children:"Receives Excalidraw API instance"})]})]})]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Example:"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-typescript",children:"<Drawing\n  className={styles.canvas}\n  visible={currentPage === Page.Drawing}\n  initialScene={pages[activePageId].scene}\n  onSceneChange={(scene) => updatePageScene(activePageId, scene)}\n/>\n"})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"drawinghandle-type",children:"DrawingHandle Type"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"File:"})," ",(0,d.jsx)(n.code,{children:"frontend/src/App/Drawing.tsx"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Purpose:"})," Interface for methods exposed to parent components via ref."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-typescript",children:"export type DrawingHandle = {\n  /** Exports the current drawing as a PNG blob */\n  getPNGBlob: () => Promise<Blob | null>;\n};\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Methods:"})}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Method"}),(0,d.jsx)(n.th,{children:"Signature"}),(0,d.jsx)(n.th,{children:"Returns"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"getPNGBlob"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"() => Promise<Blob | null>"})}),(0,d.jsx)(n.td,{children:"PNG blob or null"}),(0,d.jsx)(n.td,{children:"Exports canvas as PNG image"})]})})]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Usage:"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-typescript",children:"const drawingRef = useRef<DrawingHandle>(null);\n\nconst exportToPNG = async () => {\n  const blob = await drawingRef.current?.getPNGBlob();\n  if (blob) {\n    // Upload or download\n    const formData = new FormData();\n    formData.append('file', blob, 'sketch.png');\n    await fetch('/api/generate/', { method: 'POST', body: formData });\n  }\n};\n\nreturn <Drawing ref={drawingRef} {...} />;\n"})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"navbarprops-type",children:"NavbarProps Type"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"File:"})," ",(0,d.jsx)(n.code,{children:"frontend/src/App/Navbar.tsx"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Purpose:"})," Props for the Navbar component."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-typescript",children:"type Props = {\n  /** Current active page */\n  curPage: Page;\n  /** Callback for page change events */\n  onPageChange: (p: Page) => void;\n  /** Current filename being edited */\n  filename?: string;\n  /** Callback for filename change events */\n  onFilenameChange?: (name: string) => void;\n  /** Callback to initiate collaboration */\n  onStartCollab?: () => void;\n  /** Callback to generate mockup */\n  onGenerate?: () => void;\n  /** Callback to export code */\n  onExport?: () => void;\n};\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"All Properties:"})}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Property"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Required"}),(0,d.jsx)(n.th,{children:"Default"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"curPage"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"Page"})}),(0,d.jsx)(n.td,{children:"Yes"}),(0,d.jsx)(n.td,{children:"-"}),(0,d.jsx)(n.td,{children:"Currently active page view"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"onPageChange"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"(p: Page) => void"})}),(0,d.jsx)(n.td,{children:"Yes"}),(0,d.jsx)(n.td,{children:"-"}),(0,d.jsx)(n.td,{children:"Page switch handler"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"filename"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:"No"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:'"untitled.sketch"'})}),(0,d.jsx)(n.td,{children:"Editable filename"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"onFilenameChange"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"(name: string) => void"})}),(0,d.jsx)(n.td,{children:"No"}),(0,d.jsx)(n.td,{children:"-"}),(0,d.jsx)(n.td,{children:"Filename change handler"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"onStartCollab"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"() => void"})}),(0,d.jsx)(n.td,{children:"No"}),(0,d.jsx)(n.td,{children:"-"}),(0,d.jsx)(n.td,{children:'"Collaborate" button handler'})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"onGenerate"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"() => void"})}),(0,d.jsx)(n.td,{children:"No"}),(0,d.jsx)(n.td,{children:"-"}),(0,d.jsx)(n.td,{children:'"Generate" button handler'})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"onExport"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"() => void"})}),(0,d.jsx)(n.td,{children:"No"}),(0,d.jsx)(n.td,{children:"-"}),(0,d.jsx)(n.td,{children:'"Export code" button handler'})]})]})]}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"mockupprops-type",children:"MockupProps Type"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"File:"})," ",(0,d.jsx)(n.code,{children:"frontend/src/App/Mockup.tsx"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Purpose:"})," Props for the Mockup component."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-typescript",children:"type Props = {\n  /** Array of generated mockups to display */\n  mockups?: MockupPage[];\n  /** ID of currently active mockup */\n  activePageId: string | null;\n  /** Callback when mockup is selected */\n  onSelectPage: (id: string) => void;\n};\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"All Properties:"})}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Property"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Required"}),(0,d.jsx)(n.th,{children:"Default"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"mockups"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"MockupPage[]"})}),(0,d.jsx)(n.td,{children:"No"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"[]"})}),(0,d.jsx)(n.td,{children:"Array of generated HTML mockups"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"activePageId"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string | null"})}),(0,d.jsx)(n.td,{children:"Yes"}),(0,d.jsx)(n.td,{children:"-"}),(0,d.jsx)(n.td,{children:"ID of mockup to display"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"onSelectPage"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"(id: string) => void"})}),(0,d.jsx)(n.td,{children:"Yes"}),(0,d.jsx)(n.td,{children:"-"}),(0,d.jsx)(n.td,{children:"Mockup selection handler"})]})]})]}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"pagesidebarprops-type",children:"PageSidebarProps Type"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"File:"})," ",(0,d.jsx)(n.code,{children:"frontend/src/App/reusable_sidebar.tsx"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Purpose:"})," Props for the generic PageSidebar component."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-typescript",children:"type Props<T extends SidebarItem> = {\n  title: string;\n  items: T[];\n  activeItemId: string;\n  onSelectItem: (id: string) => void;\n  onRenameItem?: (id: string, name: string) => void;\n  onDeleteItem?: (id: string) => void;\n  onAddItem?: () => void;\n  onDuplicateItem?: () => void;\n  editingId: string | null;\n  onSetEditingId: (id: string | null) => void;\n  expanded: boolean;\n  onToggleExpanded: () => void;\n  showActions?: boolean;\n  allowDelete?: boolean;\n};\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"All Properties:"})}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Property"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Required"}),(0,d.jsx)(n.th,{children:"Default"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"title"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:"Yes"}),(0,d.jsx)(n.td,{children:"-"}),(0,d.jsx)(n.td,{children:"Sidebar header title"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"items"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"T[]"})}),(0,d.jsx)(n.td,{children:"Yes"}),(0,d.jsx)(n.td,{children:"-"}),(0,d.jsx)(n.td,{children:"Array of items to display"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"activeItemId"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:"Yes"}),(0,d.jsx)(n.td,{children:"-"}),(0,d.jsx)(n.td,{children:"ID of currently active item"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"onSelectItem"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"(id: string) => void"})}),(0,d.jsx)(n.td,{children:"Yes"}),(0,d.jsx)(n.td,{children:"-"}),(0,d.jsx)(n.td,{children:"Item selection handler"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"onRenameItem"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"(id, name) => void"})}),(0,d.jsx)(n.td,{children:"No"}),(0,d.jsx)(n.td,{children:"-"}),(0,d.jsx)(n.td,{children:"Rename handler"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"onDeleteItem"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"(id: string) => void"})}),(0,d.jsx)(n.td,{children:"No"}),(0,d.jsx)(n.td,{children:"-"}),(0,d.jsx)(n.td,{children:"Delete handler"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"onAddItem"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"() => void"})}),(0,d.jsx)(n.td,{children:"No"}),(0,d.jsx)(n.td,{children:"-"}),(0,d.jsx)(n.td,{children:"Add new item handler"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"onDuplicateItem"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"() => void"})}),(0,d.jsx)(n.td,{children:"No"}),(0,d.jsx)(n.td,{children:"-"}),(0,d.jsx)(n.td,{children:"Duplicate item handler"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"editingId"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string | null"})}),(0,d.jsx)(n.td,{children:"Yes"}),(0,d.jsx)(n.td,{children:"-"}),(0,d.jsx)(n.td,{children:"ID of item being edited"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"onSetEditingId"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"(id | null) => void"})}),(0,d.jsx)(n.td,{children:"Yes"}),(0,d.jsx)(n.td,{children:"-"}),(0,d.jsx)(n.td,{children:"Set editing state"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"expanded"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"boolean"})}),(0,d.jsx)(n.td,{children:"Yes"}),(0,d.jsx)(n.td,{children:"-"}),(0,d.jsx)(n.td,{children:"Sidebar expansion state"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"onToggleExpanded"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"() => void"})}),(0,d.jsx)(n.td,{children:"Yes"}),(0,d.jsx)(n.td,{children:"-"}),(0,d.jsx)(n.td,{children:"Toggle expansion handler"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"showActions"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"boolean"})}),(0,d.jsx)(n.td,{children:"No"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"true"})}),(0,d.jsx)(n.td,{children:"Show action buttons"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"allowDelete"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"boolean"})}),(0,d.jsx)(n.td,{children:"No"}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"true"})}),(0,d.jsx)(n.td,{children:"Allow item deletion"})]})]})]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Generic Type Parameter:"})}),"\n",(0,d.jsxs)(n.p,{children:["The component is generic over ",(0,d.jsx)(n.code,{children:"T extends SidebarItem"}),":"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-typescript",children:"<PageSidebar<SketchPage>\n  items={sketchPages}\n  // ... other props\n/>\n\n<PageSidebar<MockupPage>\n  items={mockupPages}\n  // ... other props\n/>\n"})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"collaborationdialogprops-interface",children:"CollaborationDialogProps Interface"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"File:"})," ",(0,d.jsx)(n.code,{children:"frontend/src/App/CollaborationDialog.tsx"})]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Purpose:"})," Props for the CollaborationDialog component."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-typescript",children:"interface CollaborationDialogProps {\n  /** Whether the dialog is open */\n  isOpen: boolean;\n  /** Callback to close the dialog */\n  onClose: () => void;\n  /** Current collaboration ID */\n  collabId: string;\n}\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"All Properties:"})}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Property"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Required"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"isOpen"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"boolean"})}),(0,d.jsx)(n.td,{children:"Yes"}),(0,d.jsx)(n.td,{children:"Controls dialog visibility"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"onClose"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"() => void"})}),(0,d.jsx)(n.td,{children:"Yes"}),(0,d.jsx)(n.td,{children:"Close dialog handler"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"collabId"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:"Yes"}),(0,d.jsx)(n.td,{children:"Collaboration session ID for URL generation"})]})]})]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Example:"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-typescript",children:'<CollaborationDialog\n  isOpen={showDialog}\n  onClose={() => setShowDialog(false)}\n  collabId="12345"\n/>\n'})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h2,{id:"utility-types",children:"Utility Types"}),"\n",(0,d.jsx)(n.h3,{id:"excalidrawapi-type",children:"ExcalidrawAPI Type"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"File:"})," ",(0,d.jsx)(n.code,{children:"frontend/src/App/Drawing.tsx"})," (internal)"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"Purpose:"})," Type representing Excalidraw's API methods."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-typescript",children:'type ExcalidrawAPI = NonNullable<\n  Parameters<\n    NonNullable<React.ComponentProps<typeof Excalidraw>["excalidrawAPI"]>\n  >[0]\n>;\n'})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Common Methods:"})}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Method"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"getSceneElements()"})}),(0,d.jsx)(n.td,{children:"Returns all drawing elements"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"getAppState()"})}),(0,d.jsx)(n.td,{children:"Returns current application state"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"getFiles()"})}),(0,d.jsx)(n.td,{children:"Returns embedded files/images"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"updateScene(data)"})}),(0,d.jsx)(n.td,{children:"Updates scene programmatically"})]})]})]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Usage:"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-typescript",children:"const excaliRef = useRef<ExcalidrawAPI | null>(null);\n\n// In Excalidraw component:\n<Excalidraw\n  excalidrawAPI={(api) => {\n    excaliRef.current = api;\n  }}\n/>\n\n// Later:\nconst elements = excaliRef.current?.getSceneElements();\n"})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h2,{id:"type-guards",children:"Type Guards"}),"\n",(0,d.jsx)(n.h3,{id:"checking-page-type",children:"Checking Page Type"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-typescript",children:"function isSketchPage(item: SidebarItem): item is SketchPage {\n  return 'scene' in item;\n}\n\nfunction isMockupPage(item: SidebarItem): item is MockupPage {\n  return 'html' in item;\n}\n\n// Usage:\nif (isSketchPage(item)) {\n  console.log(item.scene.elements);\n}\n"})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h2,{id:"type-conversions",children:"Type Conversions"}),"\n",(0,d.jsx)(n.h3,{id:"sketchpage-to-mockuppage",children:"SketchPage to MockupPage"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-typescript",children:"function convertToMockup(\n  sketch: SketchPage,\n  generatedHtml: string\n): MockupPage {\n  return {\n    id: sketch.id,\n    name: sketch.name,\n    html: generatedHtml\n  };\n}\n"})}),"\n",(0,d.jsx)(n.h3,{id:"backend-response-to-mockuppage",children:"Backend Response to MockupPage"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-typescript",children:"interface BackendResult {\n  id: string;\n  html: string;\n  error?: string;\n}\n\nfunction parseBackendResults(\n  results: BackendResult[],\n  sketches: SketchPage[]\n): MockupPage[] {\n  return results\n    .filter(r => !r.error)\n    .map(r => ({\n      id: r.id,\n      name: sketches.find(s => s.id === r.id)?.name || 'Untitled',\n      html: r.html\n    }));\n}\n"})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h2,{id:"related-documentation",children:"Related Documentation"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:(0,d.jsx)(n.a,{href:"/project-001-sketch2screen/docs/api-specification/frontend-api/components",children:"Frontend Components"})})," - How these types are used in components"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:(0,d.jsx)(n.a,{href:"/project-001-sketch2screen/docs/api-specification/frontend-api/collaboration-client",children:"CollabClient"})})," - Collaboration-specific types"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:(0,d.jsx)(n.a,{href:"/project-001-sketch2screen/docs/api-specification/backend-api/rest-endpoints",children:"Backend API"})})," - Backend data formats"]}),"\n"]})]})}function o(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(h,{...e})}):h(e)}}}]);