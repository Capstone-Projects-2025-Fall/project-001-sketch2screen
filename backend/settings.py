"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from django.core.management.utils import get_random_secret_key
import os

SECRET_KEY = get_random_secret_key()
# Paths
BASE_DIR = Path(__file__).resolve().parent       # => .../backend
PROJECT_ROOT = BASE_DIR.parent                   # => repo root (has templates/, frontend/)
CLAUDE_API_KEY = PROJECT_ROOT / "APIkey.txt"
CLAUDE_MODEL = "claude-sonnet-4-20250514"

PRODUCTION = False
prod_env = os.environ.get("PROD")
if prod_env == "True":
    PRODUCTION = True

print(prod_env)
print(PRODUCTION)

# Debug
DEBUG = True#not PRODUCTION   # switch to False in production
ALLOWED_HOSTS = ["*"]  # tighten this in production

print(DEBUG)
# Installed apps
INSTALLED_APPS = [
    # Core Django apps (required)
    "daphne",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "corsheaders",
    "rest_framework",

    # Static files
    "whitenoise.runserver_nostatic",
    "django.contrib.staticfiles",

    # Third-party
    "django_vite",

    # Your apps
    "backend.sketch_api",
]

# Middleware
MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "corsheaders.middleware.CorsMiddleware",
]

# Templates
TEMPLATES = [{
    "BACKEND": "django.template.backends.django.DjangoTemplates",
    "DIRS": [PROJECT_ROOT / "backend" / "templates"],   # repo-root/templates/index.html
    "APP_DIRS": True,
    "OPTIONS": {"context_processors": [
        "django.template.context_processors.debug",
        "django.template.context_processors.request",
        "django.contrib.auth.context_processors.auth",
        "django.contrib.messages.context_processors.messages",
    ]},
}]

#Rest Framework
REST_FRAMEWORK = {
    'DEFAULT_PARSOR_CLASSES': [
        "rest_framework.parsers.JSONParser",
        "rest_framework.parsers.FormParser",
        "rest_framework.parsers.MultiPartParser",
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        "rest_framework.permissions.AllowAny",  # open API, tighten in production
    ]
}

# WSGI
WSGI_APPLICATION = "backend.wsgi.application"

# Static
STATIC_URL = "/static/"
STATIC_ROOT = BASE_DIR / "staticfiles"

# Only include dist/ if it exists (so you donâ€™t get warnings in dev)
dist_path = PROJECT_ROOT / "backend" / "static"
STATICFILES_DIRS = [dist_path] if dist_path.exists() else []

ROOT_URLCONF = "backend.urls"
ASGI_APPLICATION = "backend.asgi.application"

CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels.layers.InMemoryChannelLayer"
    }
}

# django-vite
DJANGO_VITE_DEV_MODE = not PRODUCTION
DJANGO_VITE_DEV_SERVER_HOST = "localhost"
DJANGO_VITE_DEV_SERVER_PORT = 5173

DJANGO_VITE = {
    "default": {
        "dev_mode": DJANGO_VITE_DEV_MODE,                 # True in dev, False in prod
        "dev_server_host": "localhost",   # or "127.0.0.1"
        "dev_server_port": 5173,
        "manifest_path": dist_path / ".vite" / "manifest.json",
        "static_url_prefix": "",          # prevent /static prefix in dev
    }
}


# Production-only: enable optimized static storage
# if not DEBUG:
#     STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"
